/Users/basinert/Desktop/Brushforge-Android-Project/Brushforge/feature/converter/build/intermediates/lint-cache/lintReportDebug/migrated-jars/androidx.navigation.common.lint.NavigationCommonIssueRegistry-5daa12651be0734e..jar: Warning: Library lint checks out of date;
these checks will be skipped!

Lint found an issue registry (androidx.navigation.common.lint.NavigationCommonIssueRegistry)
which was compiled against an older version of lint
than this one. This is usually fine, but not in this
case; some basic verification shows that the lint
check jar references (for example) the following API
which is no longer valid in this version of lint:
org.jetbrains.kotlin.analysis.api.lifetime.KaDefaultLifetimeTokenProvider#Companion
(Referenced from androidx/navigation/lint/UtilKt.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
EmptyNavDeepLink,WrongStartDestinationType,MissingSerializableAnnotation,MissingKeepAnnotation

Recompile the checks against the latest version, or if
this is a check bundled with a third-party library, see
if there is a more recent version available.

Version of Lint API this lint check is using is 14.
The Lint API version currently running is 16 (8.7+). [ObsoleteLintCustomCheck]
/Users/basinert/Desktop/Brushforge-Android-Project/Brushforge/feature/converter/build/intermediates/lint-cache/lintReportDebug/migrated-jars/androidx.navigation.compose.lint.NavigationComposeIssueRegistry-598b224f0ce2f9f2..jar: Warning: Library lint checks out of date;
these checks will be skipped!

Lint found an issue registry (androidx.navigation.compose.lint.NavigationComposeIssueRegistry)
which was compiled against an older version of lint
than this one. This is usually fine, but not in this
case; some basic verification shows that the lint
check jar references (for example) the following API
which is no longer valid in this version of lint:
org.jetbrains.kotlin.analysis.api.lifetime.KaDefaultLifetimeTokenProvider#Companion
(Referenced from androidx/navigation/lint/UtilKt.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
ComposableDestinationInComposeScope
ComposableNavGraphInComposeScope
UnrememberedGetBackStackEntry
WrongStartDestinationType
MissingKeepAnnotation
MissingSerializableAnnotation

Recompile the checks against the latest version, or if
this is a check bundled with a third-party library, see
if there is a more recent version available.

Version of Lint API this lint check is using is 14.
The Lint API version currently running is 16 (8.7+). [ObsoleteLintCustomCheck]
/Users/basinert/Desktop/Brushforge-Android-Project/Brushforge/feature/converter/build/intermediates/lint-cache/lintReportDebug/migrated-jars/androidx.navigation.runtime.lint.NavigationRuntimeIssueRegistry-a8fea42aedb9bdb3..jar: Warning: Library lint checks out of date;
these checks will be skipped!

Lint found an issue registry (androidx.navigation.runtime.lint.NavigationRuntimeIssueRegistry)
which was compiled against an older version of lint
than this one. This is usually fine, but not in this
case; some basic verification shows that the lint
check jar references (for example) the following API
which is no longer valid in this version of lint:
org.jetbrains.kotlin.analysis.api.lifetime.KaDefaultLifetimeTokenProvider#Companion
(Referenced from androidx/navigation/lint/UtilKt.class)

Therefore, this lint check library is not included
in analysis. This affects the following lint checks:
DeepLinkInActivityDestination,WrongStartDestinationType,WrongNavigateRouteType,MissingKeepAnnotation,MissingSerializableAnnotation

Recompile the checks against the latest version, or if
this is a check bundled with a third-party library, see
if there is a more recent version available.

Version of Lint API this lint check is using is 14.
The Lint API version currently running is 16 (8.7+). [ObsoleteLintCustomCheck]

   Explanation for issues of type "ObsoleteLintCustomCheck":
   Lint can be extended with "custom checks": additional checks implemented by
   developers and libraries to for example enforce specific API usages
   required by a library or a company coding style guideline.

   The Lint APIs are not yet stable, so these checks may either cause a
   performance degradation, or stop working, or provide wrong results.

   This warning flags custom lint checks that are found to be using obsolete
   APIs and will need to be updated to run in the current lint environment.

   It may also flag issues found to be using a newer version of the API,
   meaning that you need to use a newer version of lint (or Android Studio or
   Gradle plugin etc) to work with these checks.

0 errors, 3 warnings
